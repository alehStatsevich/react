[{"D:\\react\\02proect\\src\\index.tsx":"1","D:\\react\\02proect\\src\\reportWebVitals.ts":"2","D:\\react\\02proect\\src\\App.tsx":"3","D:\\react\\02proect\\src\\components\\Header\\Header.tsx":"4","D:\\react\\02proect\\src\\components\\Profile\\Profile.tsx":"5","D:\\react\\02proect\\src\\components\\Navbar\\Navbar.tsx":"6","D:\\react\\02proect\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"7","D:\\react\\02proect\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"8","D:\\react\\02proect\\src\\components\\Dialogs\\Dialogs.tsx":"9","D:\\react\\02proect\\src\\components\\Profile\\Profileinfo\\Profileinfo.tsx":"10","D:\\react\\02proect\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx":"11","D:\\react\\02proect\\src\\components\\Dialogs\\Message\\Message.tsx":"12","D:\\react\\02proect\\src\\redux\\state.tsx":"13"},{"size":1590,"mtime":1613987317326,"results":"14","hashOfConfig":"15"},{"size":425,"mtime":1608541342413,"results":"16","hashOfConfig":"15"},{"size":1518,"mtime":1613987386606,"results":"17","hashOfConfig":"15"},{"size":7287,"mtime":1610218194782,"results":"18","hashOfConfig":"15"},{"size":808,"mtime":1613987327544,"results":"19","hashOfConfig":"15"},{"size":723,"mtime":1610528349930,"results":"20","hashOfConfig":"15"},{"size":1372,"mtime":1613987325689,"results":"21","hashOfConfig":"15"},{"size":428,"mtime":1610289157392,"results":"22","hashOfConfig":"15"},{"size":840,"mtime":1613678372437,"results":"23","hashOfConfig":"15"},{"size":16268,"mtime":1611240006542,"results":"24","hashOfConfig":"15"},{"size":450,"mtime":1613655520183,"results":"25","hashOfConfig":"15"},{"size":266,"mtime":1613671414551,"results":"26","hashOfConfig":"15"},{"size":1750,"mtime":1613987926011,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"p5bxug",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\react\\02proect\\src\\index.tsx",[],"D:\\react\\02proect\\src\\reportWebVitals.ts",[],["58","59"],"D:\\react\\02proect\\src\\App.tsx",[],"D:\\react\\02proect\\src\\components\\Header\\Header.tsx",[],"D:\\react\\02proect\\src\\components\\Profile\\Profile.tsx",["60","61"],"import React from \"react\";\r\nimport s from './Profile.module.css';\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport Profileinfo from \"./Profileinfo/Profileinfo\"\r\n\r\nimport Post from \"./MyPosts/Post/Post\";\r\nimport {PostType} from \"../../redux/state\";\r\n\r\ntype ProfilePropsType = {\r\n    posts: PostType[]\r\n    likesCount:  PostType[]\r\n    message:  PostType[]\r\n    addPost:(newPostText: string ) => void\r\n\r\n}\r\n\r\nconst Profile =(props:  ProfilePropsType) => {\r\n    return <div>\r\n        <Profileinfo/>\r\n       \r\n       \r\n       <MyPosts posts={props.posts}\r\n                likesCount={props.likesCount}\r\n                message={props.message}\r\n                addPost={props.addPost}/>\r\n\r\n    </div>\r\n\r\n}\r\nexport default Profile;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","D:\\react\\02proect\\src\\components\\Navbar\\Navbar.tsx",["62","63","64"],"import React from \"react\";\r\nimport s from './Navbar.module.css';\r\n\r\nconst Navbar = () => {\r\n    return <nav className={s.nav}>\r\n        <div className={s.item}>\r\n            <a href=\"/profile\">Profile</a>\r\n        </div>\r\n        <div className={s.item}>\r\n            <a href=\"/dialogs\">Messages</a>\r\n        </div>\r\n        <div className={s.item}>\r\n            <a>News</a>\r\n        </div>\r\n        <div className={s.item}>\r\n        <a>Music</a>\r\n    </div>\r\n        <div className={s.item}>\r\n            <a>Setting</a>\r\n        </div>\r\n    </nav>\r\n\r\n}\r\nexport default Navbar;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","D:\\react\\02proect\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",["65","66","67"],"import React, {ChangeEvent} from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {addPost, PostType} from \"../../../redux/state\";\r\n\r\nexport type MyPostsPropsType = {\r\n    posts: PostType[]\r\n    changeText: (newPostText: string )=> void\r\n    message: PostType[]\r\n    likesCount: PostType[]\r\n    addPost: () => void\r\n}\r\nconst MyPosts = (props: MyPostsPropsType) => {\r\n    let postsElements =\r\n        props.posts.map(p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n    //ссылка ссьлающаяся на  элемент в textarea\r\n    //  let newPostElement = React.createRef();\r\n    let newPostElement = React.createRef<HTMLTextAreaElement>();\r\n\r\n    const changeTextarea = () => {\r\n        if (newPostElement.current) {\r\n            let text= newPostElement.current.value;\r\n            props.changeText(text)\r\n        }\r\n    }\r\n\r\n    return <div className={s.postsBlock}>\r\n        <h3> my posts</h3>\r\n        <div>\r\n            <div>\r\n                <textarea ref={newPostElement} onChange={changeTextarea}></textarea>\r\n            </div>\r\n            <div>\r\n                <button onClick={props.addPost}>Add post</button>\r\n            </div>\r\n        </div>\r\n        <div className={s.posts}>\r\n\r\n            {postsElements}\r\n        </div>\r\n    </div>\r\n}\r\nexport default MyPosts;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","D:\\react\\02proect\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",[],"D:\\react\\02proect\\src\\components\\Dialogs\\Dialogs.tsx",[],"D:\\react\\02proect\\src\\components\\Profile\\Profileinfo\\Profileinfo.tsx",[],"D:\\react\\02proect\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx",[],"D:\\react\\02proect\\src\\components\\Dialogs\\Message\\Message.tsx",[],"D:\\react\\02proect\\src\\redux\\state.tsx",["68"],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":2,"column":8,"nodeType":"75","messageId":"76","endLine":2,"endColumn":9},{"ruleId":"73","severity":1,"message":"77","line":6,"column":8,"nodeType":"75","messageId":"76","endLine":6,"endColumn":12},{"ruleId":"78","severity":1,"message":"79","line":13,"column":13,"nodeType":"80","endLine":13,"endColumn":16},{"ruleId":"78","severity":1,"message":"79","line":16,"column":9,"nodeType":"80","endLine":16,"endColumn":12},{"ruleId":"78","severity":1,"message":"79","line":19,"column":13,"nodeType":"80","endLine":19,"endColumn":16},{"ruleId":"73","severity":1,"message":"81","line":1,"column":16,"nodeType":"75","messageId":"76","endLine":1,"endColumn":27},{"ruleId":"73","severity":1,"message":"82","line":4,"column":9,"nodeType":"75","messageId":"76","endLine":4,"endColumn":13},{"ruleId":"73","severity":1,"message":"83","line":5,"column":9,"nodeType":"75","messageId":"76","endLine":5,"endColumn":16},{"ruleId":"73","severity":1,"message":"84","line":1,"column":9,"nodeType":"75","messageId":"76","endLine":1,"endColumn":18},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"@typescript-eslint/no-unused-vars","'s' is defined but never used.","Identifier","unusedVar","'Post' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'ChangeEvent' is defined but never used.","'type' is defined but never used.","'addPost' is defined but never used.","'stringify' is defined but never used.","no-global-assign","no-unsafe-negation"]